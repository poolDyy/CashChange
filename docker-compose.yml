volumes:
  pgdata:
  redis_data:


networks:
  cc_network:
    driver: bridge

services:

  nginx:
    image: nginx:1.25
    volumes:
      - ./cicd/nginx:/etc/nginx/
    ports:
      - 9000:80
    depends_on:
      - backend
    networks:
      - cc_network

  postgres:
    image: postgres:17.3-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - cc_network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    volumes:
      - 'redis_data:/bitnami/redis/data'
    networks:
      - cc_network

  centrifugo:
    image: centrifugo/centrifugo:v6.1
    env_file:
      - ./cicd/centrifugo/.env
    volumes:
      - ./cicd/centrifugo/config.json:/centrifugo/config.json
    command: centrifugo -c config.json
    ports:
      - '8888:8888'
    networks:
      - cc_network

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ../cicd/docker/backend/Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - backend/.env
    volumes:
      - ./backend:/srv/
    networks:
      - cc_network
    depends_on:
      - postgres
      - redis
    command: /bin/sh -c "./manage.py migrate && ./manage.py runserver 0.0.0.0:8000"
    # command:  /bin/sh -c "./manage.py migrate &&  uwsgi --master --http :8000 --module src.wsgi"

  celery_worker:
    container_name: celery_worker
    build:
      context: ./backend
      dockerfile: ../cicd/docker/backend/Dockerfile
    env_file:
      - backend/.env
    volumes:
      - ./backend:/srv/
    depends_on:
      - redis
    networks:
      - cc_network
    restart: unless-stopped
    command: celery -A src worker --loglevel=info --concurrency=2 -Ofair

  flower:
    container_name: flower
    image: mher/flower
    command: celery -A src flower
    env_file:
      - backend/.env
    ports:
      - "5555:5555"
    depends_on:
      - celery_worker
    networks:
      - cc_network

  telegram:
    container_name: telegram
    build:
      context: ./telegram
      dockerfile: ../cicd/docker/telegram/Dockerfile
    restart: unless-stopped
    ports:
      - "8443:8443"
    env_file:
      - telegram/.env
    volumes:
      - ./telegram:/srv/
    networks:
      - cc_network
    command: /bin/sh -c "python bot.py"