# Generated by Django 5.1.6 on 2025-03-03 12:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('telegram', '0002_telegramuser_tu_telegram_username_contains_at'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VerificationCodeTelegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('code', models.CharField(max_length=6, verbose_name='Код верификации')),
                ('telegram_username', models.CharField(max_length=255, verbose_name='Никнейм в Telegram')),
            ],
            options={
                'verbose_name': 'Код верификации пользователя.',
                'verbose_name_plural': 'Коды верификации пользователя.',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='telegram_user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to='telegram.telegramuser', verbose_name='Телеграмм пользователь'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(condition=models.Q(('is_verify', False), ('telegram_user__isnull', False), _connector='OR'), name='is_verify_requires_telegram_user'),
        ),
        migrations.AddConstraint(
            model_name='verificationcodetelegram',
            constraint=models.UniqueConstraint(fields=('code', 'telegram_username'), name='unique_code_per_telegram_username'),
        ),
        migrations.AddConstraint(
            model_name='verificationcodetelegram',
            constraint=models.CheckConstraint(condition=models.Q(('telegram_username__contains', '@'), _negated=True), name='vct_telegram_username_contains_at'),
        ),
    ]
